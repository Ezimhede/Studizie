@model Studizie.ViewModels.CreateViewModel

@{
    ViewBag.Title = "Create a group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create a Group</h2>

@using (Html.BeginForm("Save", "Groups", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Groups.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Groups.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Groups.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Groups.About, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Groups.About, 5, 20, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Groups.About, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.NumberOfMembers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control" id="NumberOfMembers" name="NumberOfMembers" type="number" disabled="">
                    @Html.ValidationMessageFor(model => model.NumberOfMembers, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Groups.MeetingPoint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Groups.MeetingPoint, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Groups.MeetingPoint, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Groups.TimeOfMeeting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Groups.TimeOfMeeting, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Groups.TimeOfMeeting, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Groups.GroupCreator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Groups.GroupCreator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Groups.GroupCreator, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Groups.GroupTypesId, "Group Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Groups.GroupTypesId, new SelectList(Model.GroupTypes, "Id", "Name"), "Select Group Type", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Groups.GroupTypesId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Groups.EntryTypesId, "Entry Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Groups.EntryTypesId, new SelectList(Model.EntryTypes, "Id", "Name"), "Select Entry Type", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Groups.EntryTypesId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Groups.Interests, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Groups.InterestsId, new SelectList(Model.Interests, "Id", "Name"), "Select Category", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Groups.InterestsId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Groups.GroupImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="File" name="File" type="file" class="form-control" />
                @Html.ValidationMessageFor(model => model.Groups.GroupImage, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@Html.HiddenFor(model => model.Id)*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}