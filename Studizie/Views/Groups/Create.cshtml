@model Studizie.Models.Group

@{
    ViewBag.Title = "Create a group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create a Group</h2>

@using (Html.BeginForm("Save", "Groups", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.About, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.About, 5, 20, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.NumberOfMembers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control" id="NumberOfMembers" name="NumberOfMembers" type="number" disabled="">
                    @Html.ValidationMessageFor(model => model.NumberOfMembers, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.MeetingPoint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MeetingPoint, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MeetingPoint, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimeOfMeeting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeOfMeeting, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeOfMeeting, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroupCreator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroupCreator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GroupCreator, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.GroupType, "Group Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("Group Type", new SelectList(Model => Model.), htmlAttributes: new { @class = "form-control" })*@
                <select id="GroupType" name="GroupType" class="form-control">
                    <option value="Open">Open</option>
                    <option value="Closed">Closed</option>
                </select>
                @Html.ValidationMessageFor(model => model.GroupType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EntryType, "Entry Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="EntryType" name="EntryType" class="form-control">
                    <option value="Free">Free</option>
                    <option value="Paid">Paid</option>
                </select>
                @Html.ValidationMessageFor(model => model.EntryType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroupImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="GroupImage" name="GroupImage" type="file" class="form-control"/>
                @Html.ValidationMessageFor(model => model.GroupImage, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@Html.HiddenFor(model => model.Id)*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}