@model Studizie.Models.Group

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    int counted = 0;

    var base64 = Convert.ToBase64String(Model.GroupImage);

    var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
}

@*Get the number of members for the selected group*@
@switch (Model.Interests.Name)
{
    case "Science":
        counted = ViewBag.scienceCount;
        break;

    case "Arts":
        counted = ViewBag.artsCount;
        break;

    case "Technology":
        counted = ViewBag.technologyCount;
        break;

    case "Education":
        counted = ViewBag.educationCount;
        break;

    case "Sports":
        counted = ViewBag.sportsCount;
        break;

    case "Religious":
        counted = ViewBag.religiousCount;
        break;

    case "Skill Acquisition":
        counted = ViewBag.skillAcquisitionCount;
        break;

    case "Entrepreneurship":
        counted = ViewBag.entrepreneurshipCount;
        break;

    case "Video Games":
        counted = ViewBag.gamesCount;
        break;
}

<div class="details">
    <h4 class="mt-5">@Model.Name</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.About)
        </dt>

        <dd>
            @Html.TextAreaFor(model => model.About, 0, 100, htmlAttributes: new { @class = "", @readonly = "true" })

        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NumberOfMembers)
        </dt>

        <dd>
            @counted
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GroupTypes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GroupTypes.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EntryTypes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EntryTypes.Name)
        </dd>

        <dt>
            @Html.DisplayName("Category")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Interests.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MeetingPoint)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MeetingPoint)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TimeOfMeeting)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TimeOfMeeting)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GroupCreator)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GroupCreator)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>

        <dd>
            @Html.TextBoxFor(model => model.DateCreated, "{0:d MMM yyyy}",
            htmlAttributes: new { @disabled = "true", @class = "form-control" })
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GroupImage)
        </dt>

        <dd>
            @*@Html.DisplayFor(model => model.GroupImage)*@
            <img src="@imgSrc" width="100" height="100" />
        </dd>


    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
